@model DeveloperWeb.Models.Contact
<!-- contact -->
<div class="contact-form-wthreelayouts register-wthree" id="contactdiv">
        @if (TempData["Status"] != null)
        {
            <div class="alert-info alert" style="display:none;">@TempData["Status"]</div>
        }
        @Html.ValidationSummary(false, Resources.Error.summary, new { @class = "validate" })

        @{
            var culture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name.ToLowerInvariant();
            var options = new AjaxOptions()
            {
                HttpMethod = "Post",
                InsertionMode = InsertionMode.ReplaceWith,
                UpdateTargetId = "contactdiv"
            };
        }
        @using (Ajax.BeginForm("ContactAjax", "ContactUs", new { language = culture }, options))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(x => x.Name, Resources.ContactUs.Contact.NameHead)
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @placeholder = @Resources.ContactUs.Contact.NamePlaceholder, onfocus = "if (this.value == '" + Resources.ContactUs.Contact.NamePlaceholder + "') this.value = '';", onblur = "if (this.value == '') { this.value = '" + Resources.ContactUs.Contact.NamePlaceholder + "'; }" })
                @Html.ValidationMessageFor(x => x.Name, null, new { @class = "validate" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Phone, Resources.ContactUs.Contact.PhoneHead)
                @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = @Resources.ContactUs.Contact.PhonePlaceholder, onfocus = "if (this.value == '" + Resources.ContactUs.Contact.PhonePlaceholder + "') this.value = '';", onblur = "if (this.value == '') { this.value = '" + Resources.ContactUs.Contact.PhonePlaceholder + "'; }" })
                @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "validate" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Email, Resources.ContactUs.Contact.EmailHead)
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = @Resources.ContactUs.Contact.EmailPlaceholder, onfocus = "if (this.value == '" + Resources.ContactUs.Contact.EmailPlaceholder + "') this.value = '';", onblur = "if (this.value == '') { this.value = '" + @Resources.ContactUs.Contact.EmailPlaceholder+ "'; }" })
                @Html.ValidationMessageFor(x => x.Email, null, new { @class = "validate" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x=> x.Message, Resources.ContactUs.Contact.MessageHead)
                @Html.TextAreaFor(x => x.Message, new { @class = "form-control", @placeholder = @Resources.ContactUs.Contact.MessagePlaceholder, onfocus = "if (this.value == '" + Resources.ContactUs.Contact.MessagePlaceholder + "') this.value = '';", onblur = "if (this.value == '') { this.value = '" + @Resources.ContactUs.Contact.MessagePlaceholder + "'; }" })
                @Html.ValidationMessageFor(x => x.Message, null, new { @class = "validate" })
            </div>
            <div class="form-group mb-0">
                <button type="submit" class="btn btn-w3layouts btn-block  bg-theme text-white w-100 font-weight-bold text-uppercase" data-blast="bgColor">
                    @Resources.ContactUs.Contact.Send
                </button>
            </div>
        }
</div>